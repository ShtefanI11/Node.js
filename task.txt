//Creating_Server_RESTAPI_for_CrossFit_Application 

///////////////////////////////////////////ProjectArchitecture/////////////////////////////////////////////////////////
#Архитектура проекта.
1. Router => Controller => Service Layer => Data Access Layer; 
#Запрос & Ответ

1. Router: В этой папке будут храниться пути, по которым будут происходить запросы;

2. Controller: В этой папке мы будем обрабатывать все, что связано с HTTP. Работать с запросами и ответами,
#для наших конечных точек.Над этим слоем также находится небольшой маршрутизатор из Express, который передает 
#запросы соответствующему контроллеру.

3. Service Layer: В этой папке мы храним всю бизнес логику ,который экспортирует методы использует Controller;

4. Data Access Layer: В этой папке мы работаем с базой данных.Будем экспортировать методы для операций с базой данных,
#такие как создание WOD, которые будет использоваться нашим Service Layer.

/////////////////////////////////////////////////////Practice////////////////////////////////////////////////////////////
"Делаем две версии для нашего приложения создаём в src/v1 переносим в неё папку routes"
//№1 v1/routes/index.js 
1. Импортируем Express и сразу вызываем у express метод Router присваиваем это переменной router
2. router переменной вызвать метод route задать начальный URL ('/') , вызвать метод .get((запрос,ответ) => {
  в ответ.send записать (`<h2>Hello from ${запрос.baseUrl}</h2>`) вернуть ответ на каком URL мы
})

//№2 src/index.js
"Хукнуть новоиспечённый роутер"
1. Импортируем новый роутер дать ему название v1Router
2. delet app.get ,заменить его на новый роутер. Пример: app.use('/api/v1', роутер) 